/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

/*
Copyright 2025 NVIDIA CORPORATION
SPDX-License-Identifier: Apache-2.0
*/
// Code generated by informer-gen. DO NOT EDIT.

package scheduling

import (
	internalinterfaces "github.com/NVIDIA/KAI-scheduler/pkg/apis/client/informers/externalversions/internalinterfaces"
	v1alpha2 "github.com/NVIDIA/KAI-scheduler/pkg/apis/client/informers/externalversions/scheduling/v1alpha2"
	v2 "github.com/NVIDIA/KAI-scheduler/pkg/apis/client/informers/externalversions/scheduling/v2"
	v2alpha2 "github.com/NVIDIA/KAI-scheduler/pkg/apis/client/informers/externalversions/scheduling/v2alpha2"
)

// Interface provides access to each of this group's versions.
type Interface interface {
	// V1alpha2 provides access to shared informers for resources in V1alpha2.
	V1alpha2() v1alpha2.Interface
	// V2 provides access to shared informers for resources in V2.
	V2() v2.Interface
	// V2alpha2 provides access to shared informers for resources in V2alpha2.
	V2alpha2() v2alpha2.Interface
}

type group struct {
	factory          internalinterfaces.SharedInformerFactory
	namespace        string
	tweakListOptions internalinterfaces.TweakListOptionsFunc
}

// New returns a new Interface.
func New(f internalinterfaces.SharedInformerFactory, namespace string, tweakListOptions internalinterfaces.TweakListOptionsFunc) Interface {
	return &group{factory: f, namespace: namespace, tweakListOptions: tweakListOptions}
}

// V1alpha2 returns a new v1alpha2.Interface.
func (g *group) V1alpha2() v1alpha2.Interface {
	return v1alpha2.New(g.factory, g.namespace, g.tweakListOptions)
}

// V2 returns a new v2.Interface.
func (g *group) V2() v2.Interface {
	return v2.New(g.factory, g.namespace, g.tweakListOptions)
}

// V2alpha2 returns a new v2alpha2.Interface.
func (g *group) V2alpha2() v2alpha2.Interface {
	return v2alpha2.New(g.factory, g.namespace, g.tweakListOptions)
}
