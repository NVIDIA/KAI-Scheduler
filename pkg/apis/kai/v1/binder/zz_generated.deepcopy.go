//go:build !ignore_autogenerated

/*
Copyright 2025 NVIDIA CORPORATION
SPDX-License-Identifier: Apache-2.0
*/

// Code generated by controller-gen. DO NOT EDIT.

package binder

import (
	"github.com/NVIDIA/KAI-scheduler/pkg/apis/kai/v1/common"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Binder) DeepCopyInto(out *Binder) {
	*out = *in
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(common.Service)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceReservation != nil {
		in, out := &in.ResourceReservation, &out.ResourceReservation
		*out = new(ResourceReservation)
		(*in).DeepCopyInto(*out)
	}
	if in.Replicas != nil {
		in, out := &in.Replicas, &out.Replicas
		*out = new(int32)
		**out = **in
	}
	if in.MaxConcurrentReconciles != nil {
		in, out := &in.MaxConcurrentReconciles, &out.MaxConcurrentReconciles
		*out = new(int)
		**out = **in
	}
	if in.VolumeBindingTimeoutSeconds != nil {
		in, out := &in.VolumeBindingTimeoutSeconds, &out.VolumeBindingTimeoutSeconds
		*out = new(int)
		**out = **in
	}
	if in.ProbePort != nil {
		in, out := &in.ProbePort, &out.ProbePort
		*out = new(int)
		**out = **in
	}
	if in.MetricsPort != nil {
		in, out := &in.MetricsPort, &out.MetricsPort
		*out = new(int)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Binder.
func (in *Binder) DeepCopy() *Binder {
	if in == nil {
		return nil
	}
	out := new(Binder)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceReservation) DeepCopyInto(out *ResourceReservation) {
	*out = *in
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(common.Image)
		(*in).DeepCopyInto(*out)
	}
	if in.AllocationTimeout != nil {
		in, out := &in.AllocationTimeout, &out.AllocationTimeout
		*out = new(int)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.ServiceAccountName != nil {
		in, out := &in.ServiceAccountName, &out.ServiceAccountName
		*out = new(string)
		**out = **in
	}
	if in.AppLabel != nil {
		in, out := &in.AppLabel, &out.AppLabel
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceReservation.
func (in *ResourceReservation) DeepCopy() *ResourceReservation {
	if in == nil {
		return nil
	}
	out := new(ResourceReservation)
	in.DeepCopyInto(out)
	return out
}
