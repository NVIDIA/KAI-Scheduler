# Copyright 2025 NVIDIA CORPORATION
# SPDX-License-Identifier: Apache-2.0

name: Lint Commit Messages

on:
  pull_request:
    types: [opened, edited, synchronize, reopened]

jobs:
  commitlint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install commitlint
        run: |
          npm install --save-dev @commitlint/cli @commitlint/config-conventional

      - name: Create commitlint config
        run: |
          cat > commitlint.config.js << 'EOF'
          module.exports = {
            extends: ['@commitlint/config-conventional'],
            rules: {
              'type-enum': [
                2,
                'always',
                [
                  'feat',
                  'fix',
                  'docs',
                  'style',
                  'refactor',
                  'perf',
                  'test',
                  'build',
                  'ci',
                  'chore',
                  'revert'
                ]
              ],
              'scope-enum': [
                2,
                'always',
                [
                  'scheduler',
                  'binder',
                  'podgrouper',
                  'admission',
                  'operator',
                  'queuecontroller',
                  'podgroupcontroller',
                  'resourcereservation',
                  'fairshare',
                  'chart',
                  'crd',
                  'api',
                  'nodescaleadjuster',
                  'scalingpod',
                  'deps',
                  'ci',
                  'release'
                ]
              ],
              'scope-empty': [0, 'never'],
              'subject-case': [0, 'never']
            }
          };
          EOF

      - name: Validate PR title
        env:
          PR_TITLE: ${{ github.event.pull_request.title }}
        run: |
          echo "$PR_TITLE" | npx commitlint

      - name: Validate all commits in PR
        run: |
          npx commitlint --from ${{ github.event.pull_request.base.sha }} --to ${{ github.event.pull_request.head.sha }} --verbose

      - name: Comment on PR if validation fails
        if: failure()
        uses: actions/github-script@v7
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const message = `## ❌ Commit Message Validation Failed

            Your commit messages don't follow the [Conventional Commits](https://www.conventionalcommits.org/) specification.

            ### Required Format
            \`\`\`
            <type>[optional scope]: <description>

            [optional body]

            [optional footer(s)]
            \`\`\`

            ### Valid Types
            - \`feat\`: A new feature
            - \`fix\`: A bug fix
            - \`docs\`: Documentation changes
            - \`style\`: Code style changes (formatting, etc.)
            - \`refactor\`: Code refactoring
            - \`perf\`: Performance improvements
            - \`test\`: Test changes
            - \`build\`: Build system changes
            - \`ci\`: CI/CD changes
            - \`chore\`: Other changes
            - \`revert\`: Revert a previous commit

            ### Valid Scopes (optional)
            scheduler, binder, podgrouper, admission, operator, queuecontroller, podgroupcontroller, resourcereservation, fairshare, chart, crd, api, nodescaleadjuster, scalingpod, deps, ci, release

            ### Examples
            \`\`\`
            feat(scheduler): add GPU topology-aware scheduling
            fix(binder): resolve race condition in pod binding
            docs: update contribution guidelines
            chore(deps): upgrade kubernetes to v1.29
            \`\`\`

            ### Breaking Changes
            Use \`!\` after type/scope: \`feat(api)!: remove deprecated field\`

            Please refer to our [Contributing Guide](https://github.com/NVIDIA/KAI-Scheduler/blob/main/CONTRIBUTING.md#commit-message-guidelines) for more details.`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: message
            });
