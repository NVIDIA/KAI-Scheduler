# Copyright 2025 NVIDIA CORPORATION
# SPDX-License-Identifier: Apache-2.0

name: KAI Scheduler - Pull Request
on:
  pull_request:

concurrency:
  group: ${{ github.head_ref || github.ref || github.run_id }}
  cancel-in-progress: true

jobs:
  validate-and-test:
    name: Validate & Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.4'

      - name: Run validation
        run: make validate

      - name: Run tests
        run: make test

  build:
    name: Build
    runs-on: ubuntu-latest
    outputs:
      package_version: ${{ steps.package_version.outputs.PACKAGE_VERSION }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Extract package version
        id: package_version
        run: |
          PACKAGE_VERSION=0.0.0-$(git rev-parse --short HEAD)
          echo "PACKAGE_VERSION=$PACKAGE_VERSION" >> $GITHUB_ENV
          echo "PACKAGE_VERSION=$PACKAGE_VERSION" >> $GITHUB_OUTPUT
          echo $PACKAGE_VERSION

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.4'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Create image cache directory
        run: mkdir images

      - name: Cache for docker images and helm chart
        uses: actions/cache@v4
        with:
          path: images
          key:  images-${{ github.sha }}

      - name: Build docker images
        run: |
          make build DOCKER_BUILDX_ADDITIONAL_ARGS=--load VERSION=$PACKAGE_VERSION
          docker save $(docker images --format '{{.Repository}}:{{.Tag}}' | grep $PACKAGE_VERSION) | gzip > images/docker_images.tgz

      - name: Build helm chart
        run: |
          helm package ./deployments/kai-scheduler -d ./charts --app-version $PACKAGE_VERSION --version $PACKAGE_VERSION
          cp charts/kai-scheduler-$PACKAGE_VERSION.tgz images/


  e2e-tests:
    name: Run E2E Tests
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache restore
        uses: actions/cache/restore@v4
        with:
          path: images
          key:  images-${{ github.sha }}

      - name: Create k8s Kind Cluster
        uses: helm/kind-action@v1.10.0
        with:
          cluster_name: kind
          version: v0.26.0
          config: ./hack/e2e-kind-config.yaml

      - name: Load docker images to kind
        working-directory: images
        env:
          PACKAGE_VERSION: ${{ needs.build.outputs.package_version }}
        run: |
          docker load < docker_images.tgz
          for image in $(docker images --format '{{.Repository}}:{{.Tag}}' | grep $PACKAGE_VERSION); do
            kind load docker-image $image --name kind
          done

      - name: Deploy fake gpu operator
        run: |
          helm repo add fake-gpu-operator https://fake-gpu-operator.storage.googleapis.com
          helm repo update
          helm upgrade -i gpu-operator fake-gpu-operator/fake-gpu-operator --namespace gpu-operator --create-namespace \
              --version 0.0.58 --values ./hack/fake-gpu-operator-values.yaml --wait

      - name: install KAI-scheduler
        env:
          PACKAGE_VERSION: ${{ needs.build.outputs.package_version }}
        run: |
          helm upgrade -i kai-scheduler ./images/kai-scheduler-$PACKAGE_VERSION.tgz -n kai-scheduler --create-namespace \
            --set "global.gpuSharing=true" --wait

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.22

      - name: Install ginkgo
        run: |
          go install github.com/onsi/ginkgo/v2/ginkgo@v2.19.0

      - name: Run e2e tests
        run: |
          ginkgo -r --keep-going --randomize-all --randomize-suites --trace -vv ./test/e2e/suites --label-filter '!autoscale', '!scale'
